/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface TVLContract extends Truffle.Contract<TVLInstance> {
  "new"(): Promise<TVLInstance>;
}

export interface OwnershipTransferred {
  name: "OwnershipTransferred";
  args: {
    previousOwner: string;
    newOwner: string;
    0: string;
    1: string;
  };
}

type AllEvents = OwnershipTransferred

export interface TVLInstance extends Truffle.ContractInstance {
  mint_item: {
    (id: Uint16Array, amount: Uint16Array, data: ByteLengthChunk, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      id: Uint16Array, amount: Uint16Array, data: ByteLengthChunk,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      id: Uint16Array, amount: Uint16Array, data: ByteLengthChunk,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      id: Uint16Array, amount: Uint16Array, data: ByteLengthChunk,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  methods: {
    mint_item: {
    (id: Uint16Array, amount: Uint16Array, data: ByteLengthChunk, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      id: Uint16Array, amount: Uint16Array, data: ByteLengthChunk,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      id: Uint16Array, amount: Uint16Array, data: ByteLengthChunk,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      id: Uint16Array, amount: Uint16Array, data: ByteLengthChunk,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };
  }
}
